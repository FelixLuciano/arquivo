// Generated by CoffeeScript 1.11.1
(function() {
  $(function() {
    var read, rooms, tableReload, textFile;
    $("input[ type='text' ]").each(function() {
      return $(this).attr({
        onKeyup: "this.setAttribute('value', this.value )",
        value: ""
      }).after("<label for='" + ($(this).attr('id')) + "' >" + ($(this).attr('floatPlaceholder')) + "</label>");
    });
    rooms = [];
    textFile = "Nome | Largura | Comprimento | Area | Perimetro | TUGs | Iluminação\n";
    tableReload = function() {
      var i, len, room, source, sufix;
      $("#table .tableLine").not("#tableHeader").remove();
      textFile = "Nome | Largura | Comprimento | &Aacute;rea | Perimetro | TUGs | Iluminação\n";
      for (i = 0, len = rooms.length; i < len; i++) {
        room = rooms[i];
        source = "<div class='tableLine'> <div class='tableCell col-xs-3'>" + room.nome + "</div> <div class='tableCell col-xs-2'>" + (room.area.toFixed(2)) + "m²</div> <div class='tableCell col-xs-2'>" + (room.peri.toFixed(2)) + "m</div> <div class='tableCell col-xs-2'>" + room.tugs + "</div> <div class='tableCell col-xs-2'>" + room.lumn + "va</div> <div class='tableCell col-xs-1'><div class='listItem-remove'></div></div> </div>";
        sufix = "\n";
        if (rooms.indexOf(room) === rooms.length - 1) {
          sufix = "";
        }
        textFile += room.nome + " | " + room.larg + " | " + room.comp + " | " + room.area + " | " + room.peri + " | " + room.tugs + " | " + (room.lumn + sufix);
        $("#table").append(source);
      }
      return console.log(textFile);
    };
    read = function(data) {
      var i, index, len, results, room;
      data = data.split(/\n/);
      data.splice(0, 1);
      rooms = [];
      results = [];
      for (i = 0, len = data.length; i < len; i++) {
        index = data[i];
        room = index.split(" | ");
        results.push(rooms.push({
          nome: room[0],
          larg: Number(room[1]),
          comp: Number(room[2]),
          area: Number(room[3]),
          peri: Number(room[4]),
          tugs: Number(room[5]),
          lumn: Number(room[6])
        }));
      }
      return results;
    };
    $("#mainContent #createMode .actionButton").on("click", function() {
      var area, comp, getNameVal, larg, lumn, nome, peri, tugs;
      getNameVal = $("#mainContent.createMode #nome").val();
      nome = getNameVal ? getNameVal : "Indefinido";
      larg = Number($("#mainContent.createMode #largura").val().replace(",", "."));
      comp = Number($("#mainContent.createMode #comprimento").val().replace(",", "."));
      area = larg * comp;
      peri = larg * 2 + comp * 2;
      tugs = 1 + Math.floor((area - 6) / 5);
      tugs = tugs < 1 ? 1 : 1 + tugs;
      lumn = Math.floor((area - 6) / 4) * 60;
      lumn = lumn <= 1 ? 100 : 100 + lumn;
      rooms.push({
        nome: nome,
        larg: larg,
        comp: comp,
        area: area,
        peri: peri,
        tugs: tugs,
        lumn: lumn
      });
      tableReload();
      return $("#mainContent.createMode #nome, #mainContent.createMode #largura, #mainContent.createMode #comprimento").val("").attr({
        value: ""
      });
    });
    $("body").on("click", ".listItem-remove", function() {
      rooms.splice($(this).parent().parent().index() - 1, 1);
      tableReload();
      if (rooms.length === 0) {
        return $("#table").append("<div class='tableLine'> <div class='tableCell col-xs-12 empty'>Nenhum item para mostrar</div> </div>");
      }
    });
    $("#tabMenuOpen").on("click", function() {
      var exportFile;
      $(".icon", this).toggleClass("opened");
      exportFile = URL.createObjectURL(new Blob([textFile], {
        type: "text/plain"
      }));
      return $("a#save", this).attr("href", exportFile);
    });
    $("#tabMenuOpen #load").on("click", function() {
      $("#tabMenuOpen .icon").trigger("click");
      return $(this).one("change", function() {
        return $.ajax({
          type: "GET",
          url: URL.createObjectURL(this.files[0]),
          success: function(data) {
            read(data);
            tableReload();
            return $("#mainContent").removeClass("editMode").addClass("createMode");
          }
        });
      });
    });
    $("#tabMenuOpen #edit").on("click", function() {
      $("#mainContent").removeClass("createMode").addClass("editMode");
      return $("#mainContent #editMode #textFile").empty().prepend(textFile);
    });
    return $("#mainContent #editMode .actionButton").on("click", function() {
      $("#mainContent").removeClass("editMode").addClass("createMode");
      read($("#mainContent #editMode #textFile").val());
      return tableReload();
    });
  });

}).call(this);

//# sourceMappingURL=script.js.map
